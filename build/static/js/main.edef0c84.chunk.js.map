{"version":3,"sources":["components/Form.js","components/Weather.js","components/ErrorHandler.js","components/Spinner.js","App.js","index.js"],"names":["Form","props","query","setQuery","onInput","Fragment","className","type","placeholder","value","onChange","e","target","onKeyPress","Weather","React","memo","weather","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","main","temp","ErrorHandler","message","Spinner","api","App","useState","setWeather","spinner","setSpinner","evt","key","preventDefault","fetch","then","res","json","result","ReactDOM","render","document","getElementById"],"mappings":"8UA4BeA,G,MAvBF,SAAAC,GAAU,IACXC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,SAAUC,EAAWH,EAAXG,QAGzB,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,eACX,uDAEJ,0BAAMA,UAAU,QACZ,2BACIC,KAAK,OACLC,YAAY,YACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,QACnCI,WAAYT,EACZE,UAAU,oBCQfQ,G,MAzBCC,IAAMC,MAAK,SAAAf,GAAU,IACzBgB,EAAYhB,EAAZgB,QAcR,OACI,yBAAKX,UAAU,eACX,wBAAIA,UAAU,qBAAqBW,EAAQC,KAA3C,KAAmDD,EAAQE,IAAIC,SAC/D,wBAAId,UAAU,qBAfF,SAACe,GAEjB,IAGMC,EAFK,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE7DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKvGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEf,MAAM,GAAN,OAAUP,EAAV,aAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GAKIE,CAAY,IAAIC,OACnD,uBAAGzB,UAAU,qBAAqB0B,KAAKC,MAAMhB,EAAQiB,KAAKC,MAA1D,SACA,uBAAG7B,UAAU,qBAAqBW,EAAQA,QAAQ,GAAGiB,WCVlDE,G,MAVMrB,IAAMC,MAAK,SAAAf,GAAU,IAC/BgB,EAAWhB,EAAXgB,QAEN,OACI,yBAAKX,UAAU,qBACX,uBAAGA,UAAU,iBAAiBW,EAAQoB,cCCpCC,G,MANC,WACZ,OACI,yBAAKhC,UAAU,UAAf,gBCKFiC,G,YACE,4CADFA,EAEC,mCAkCQC,EA9BH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTvC,EADS,KACFC,EADE,OAEcsC,mBAAS,IAFvB,mBAETxB,EAFS,KAEAyB,EAFA,OAGcD,oBAAS,GAHvB,mBAGTE,EAHS,KAGAC,EAHA,KAoBhB,OACE,yBAAKtC,UAAU,aACb,kBAAC,EAAD,CAAMJ,MAAOA,EAAOC,SAAUA,EAAUC,QAjBvB,SAAAyC,GACH,UAAZA,EAAIC,MACND,EAAIE,iBACJH,GAAW,GACXI,MAAM,GAAD,OAAIT,EAAJ,qBAAyBrC,EAAzB,+BAAqDqC,IACvDU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJR,GAAW,GACXF,EAAWU,GACXjD,EAAS,SAQkDyC,WAAYA,IAC1ED,GAAW,kBAAC,EAAD,MACc,qBAAjB1B,EAAQiB,MAAyB,kBAAC,EAAD,CAASjB,QAASA,IAC/B,qBAApBA,EAAQoB,SAA4B,kBAAC,EAAD,CAAcpB,QAASA,MCpC1EoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.edef0c84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Form.css';\r\n\r\n\r\nconst Form = props => {\r\n    const { query, setQuery, onInput} = props;\r\n\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"heading-box\">\r\n                <h1>welcome to weather app</h1>\r\n            </div>\r\n            <form className=\"form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyPress={onInput}\r\n                    className=\"form__input\"\r\n                />\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nimport './Weather.css';\r\n\r\nconst Weather = React.memo(props => {\r\n    const { weather } = props;\r\n\r\n    const dateBuilder = (d) => {\r\n       \r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        const day = days[d.getDay()];\r\n        const date = d.getDate();\r\n        const month = months[d.getMonth()];\r\n        const year = d.getFullYear();\r\n\r\n        return `${day}, ${date} ${month} ${year}`\r\n    }\r\n    return (\r\n        <div className=\"weather-box\">\r\n            <h2 className=\"weather-box__city\">{weather.name}, {weather.sys.country}</h2>\r\n            <h4 className=\"weather-box__date\">{dateBuilder(new Date())}</h4>\r\n            <p className=\"weather-box__temp\">{Math.round(weather.main.temp)}Â°C</p>\r\n            <p className=\"weather-box__main\">{weather.weather[0].main}</p>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Weather;","import React from 'react';\r\n\r\nimport './ErrorHandler.css';\r\n\r\nconst ErrorHandler = React.memo(props => {\r\n    const {weather} = props;\r\n    \r\n     return(\r\n         <div className=\"error-handler-div\">\r\n             <p className=\"error-message\">{weather.message}</p>\r\n         </div>\r\n     )\r\n});\r\n\r\nexport default ErrorHandler;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">Loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\n\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport ErrorHandler from './components/ErrorHandler';\nimport Spinner from './components/Spinner';\n\nimport './App.css';\nimport './components/Animation.css';\n\n\nconst api = {\n  base: \"https://api.openweathermap.org/data/2.5/\",\n  key: \"5b61ecf9427b501924b05ef656d7b9c8\"\n}\n\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [spinner, setSpinner] = useState(false);\n\n  const inputHandler = evt => {\n    if (evt.key === 'Enter') {\n      evt.preventDefault();\n      setSpinner(true);\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setSpinner(false);\n          setWeather(result);\n          setQuery('');        \n        });\n    }\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Form query={query} setQuery={setQuery} onInput={inputHandler} setSpinner={setSpinner} />\n      {spinner && <Spinner />}\n      {(typeof weather.main !== \"undefined\") && <Weather weather={weather} />}\n      {(typeof weather.message !== 'undefined') && <ErrorHandler weather={weather} />}\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}